!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(n)?n:String(n)}var r=function(){function t(e,r){var o,i,u;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,u=function(t,e){return fetch(t,e).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))},(i=n(i="_fetch"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._baseUrl=e,this._headers=r}var r,o;return r=t,(o=[{key:"getInitialCards",value:function(){return this._fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"deleteCard",value:function(t){return this._fetch("".concat(this._baseUrl,"/cards/").concat(t),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(t){return this._fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{headers:this._headers,method:"PUT"})}},{key:"removeLike",value:function(t){return this._fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{headers:this._headers,method:"DELETE"})}},{key:"getUserData",value:function(){return this._fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserData",value:function(t,e){return this._fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:e})})}},{key:"editAvatar",value:function(t){return this._fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:t})})}},{key:"addCard",value:function(t,e){return this._fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:e})})}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=document.querySelector(e)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"!==t.key&&"Esc"!==t.key&&27!==t.keyCode||this.close()}},{key:"setEventListeners",value:function(){var t=this,e=this._popupSelector.querySelector(".popup__close-button"),n=this._popupSelector.querySelector(".popup__overlay");e.addEventListener("click",(function(){return t.close()})),n.addEventListener("click",(function(){return t.close()})),document.addEventListener("keydown",(function(e){return t._handleEscClose(e)}))}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=f(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},l.apply(this,arguments)}function s(t,e){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},s(t,e)}function f(t){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},f(t)}var p=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&s(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=f(r);if(o){var n=f(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._formSubmitData=e,r._formElement=r._popupSelector.querySelector(".popup__form"),r._processButtonText=n,r._button=r._popupSelector.querySelector(".popup__save-button"),r}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this._formElement.querySelectorAll(".popup__input"),e={};return t.forEach((function(t){e[t.name]=t.value})),e}},{key:"setButtonText",value:function(t){this._button.textContent=t}},{key:"setEventListeners",value:function(){var t=this;l(f(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._button.textContent=t._processButtonText,t._formSubmitData(n)}))}},{key:"close",value:function(){l(f(u.prototype),"close",this).call(this),this._formElement.reset()}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u);function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},d.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}var m=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(r);if(o){var n=b(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popupSelector.querySelector(".popup__image"),e._caption=e._popupSelector.querySelector(".popup__caption"),e}return e=u,(n=[{key:"open",value:function(t){d(b(u.prototype),"open",this).call(this),this._image.src=t.link,this._image.alt=t.name,this._caption.textContent=t.name,d(b(u.prototype),"setEventListeners",this).call(this)}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},g.apply(this,arguments)}function w(t,e){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},w(t,e)}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}var E=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&w(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(r);if(o){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._handleFormSubmit=e,r._confirmButton=r._popupSelector.querySelector('button[name="confirmPopupSaveButton"]'),r._processButtonText=n,r}return e=u,(n=[{key:"open",value:function(t,e){g(k(u.prototype),"open",this).call(this),this._confirmButton.textContent="Ya",this._target=e,this._card=t}},{key:"setButtonText",value:function(t){this._confirmButton.textContent=t}},{key:"setEventListeners",value:function(){var t=this;g(k(u.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(e){t._confirmButton.textContent=t._processButtonText,t._handleFormSubmit(t._card,t._target),e.preventDefault(),t.close()}))}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u);function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}var P=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(e),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"getAvatarInfo",value:function(){return{avatar:this._avatar.src}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.nameInput,this._job.textContent=t.jobInput}},{key:"setAvatar",value:function(t){this._avatar.src=t}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var I=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=e,this._input=n,this._error=this._form.querySelector(".".concat(this._input.id,"-error")),this._inputList=Array.from(this._form.querySelectorAll(".popup__input")),this._button=this._form.querySelector(".popup__save-button_inactive")}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){this._input.classList.add("popup__input_type-error"),this._error.textContent=t,this._error.classList.add("popup__input-error_active")}},{key:"_hideInputError",value:function(){this._input.classList.remove("popup__input_type-error"),this._error.classList.remove("popup__input-error_active"),this._error.textContent=""}},{key:"_checkInputValid",value:function(){this._input.validity.valid?this._hideInputError():this._showInputError(this._input.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._button.classList.add("popup__save-button_inactive"),this._button.setAttribute("disabled","disabled")):(this._button.classList.remove("popup__save-button_inactive"),this._button.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._input.addEventListener("input",(function(){t._checkInputValid(),t._toggleButtonState()}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,B(r.key),r)}}function B(t){var e=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===T(e)?e:String(e)}var x=function(){function t(e,n,r,o,i,u){var c,a,l,s=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),c=this,l=function(t){s._likes=t,s._renderLikes()},(a=B(a="handleLikeCard"))in c?Object.defineProperty(c,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):c[a]=l,this._title=e.name,this._url=e.link,this._cardSelector=n,this._handleCardClick=r,this._handleDeleteClick=o,this._likes=e.likes,void 0===this._likes&&(this._likes=[]),this._handleLikeClick=i,this._id=e._id,this._userId=u,this._ownerId=e.owner._id}var e,n;return e=t,(n=[{key:"getId",value:function(){return this._id}},{key:"isLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"_renderLikes",value:function(){this._likesCount.textContent=this._likes.length,this.isLiked()?this._cardLikeButton.classList.add("element__like-button_active"):this._cardLikeButton.classList.remove("element__like-button_active")}},{key:"_getTemplate",value:function(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._cardDeleteButton=this._cardElement.querySelector(".element__delete"),this._cardLikeButton=this._cardElement.querySelector(".element__like-button"),this._setEventListeners(),this._likesCount=this._cardElement.querySelector(".element__like-count"),this._renderLikes(),this._ownerId!==this._userId&&(this._cardDeleteButton.style.visibility="hidden"),this._cardElement}},{key:"_setEventListeners",value:function(){var t=this,e=this._cardElement.querySelector(".element__image"),n=this._cardElement.querySelector(".element__location"),r={name:this._title,link:this._url,_id:this._id};return e.src=this._url,e.alt=this._title,n.textContent=this._title,e.addEventListener("click",(function(){t._handleCardClick(r)})),this._cardLikeButton.addEventListener("click",(function(){t._handleLikeClick(t)})),this._cardDeleteButton.addEventListener("click",(function(e){t._handleDeleteClick(r,e.target.closest(".element"))})),this._element}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),R=x;function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==A(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}var U,V=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e.addItem(t)}))}},{key:"addItem",value:function(t){this._container.prepend(this._renderer(t))}}])&&D(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function M(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}document.getElementById("header-image").src="ea14ef72707c723d9e06.png";var J=new r("https://around.nomoreparties.co/v1/web_id_03",{authorization:"1e8e89f5-ead2-48c0-ad1c-b9a4bb77ebde","Content-Type":"application/json"});Array.from(document.querySelectorAll(".popup__form")).forEach((function(t){Array.from(t.querySelectorAll(".popup__input")).forEach((function(e){new I(t,e).enableValidation()}))}));var N=new P(".profile-info__name",".profile-info__job",".profile__avatar"),F=new p('popup[name="editPopup"]',(function(t){J.editUserData(t.nameInput,t.jobInput).then((function(t){N.setUserInfo({nameInput:t.name,jobInput:t.about}),F.close()})).catch((function(t){console.log("Error: ".concat(t))})).finally((function(){F.setButtonText("Simpan")}))}),"Menyimpan..."),H=document.querySelector('popup[name="editPopup"] .popup__form'),Y=H.querySelector("#name-input"),z=H.querySelector("#job-input");document.querySelector(".profile-info__edit-button").addEventListener("click",(function(){var t=N.getUserInfo();F.open(),Y.value=t.name,z.value=t.job}));var G=new V((function(t){return new R(t,".element-template",K,X,Q,U)._getTemplate()}),".elements"),$=new m('popup[name="viewPopup"]');function K(t){$.open(t)}function Q(t){t.isLiked()?J.removeLike(t.getId()).then((function(e){t.handleLikeCard(e.likes)})).catch((function(t){console.log("Error: ".concat(t))})):J.likeCard(t.getId()).then((function(e){t.handleLikeCard(e.likes)})).catch((function(t){console.log("Error: ".concat(t))}))}var W=new E('popup[name="confirmPopup"]',(function(t,e){console.log("Card Object:",t),J.deleteCard(t._id).then((function(){e.remove(),W.close()})).catch((function(t){console.log("Error: ".concat(t))})).finally((function(){W.setButtonText("Ya")}))}),"Menghapus...");function X(t,e){W.open(t,e)}var Z=new p('.popup[name="addPopup"]',(function(t){J.addCard(t.titleInput,t.webAddressInput).then((function(t){var e;console.log("API Response:",t),e={name:t.name,link:t.link,_id:t._id,owner:{_id:t.owner._id}},G.addItem(e),Z.close()})).catch((function(t){console.log("Error: ".concat(t))})).finally((function(){Z.setButtonText("Simpan")}))}),"Menyimpan..."),tt=document.querySelector(".profile__img-update-button"),et=document.querySelector("#updateimg-input"),nt=new p('popup[name="updateImgPopup"]',(function(t){var e=t.updateImgInput;J.editAvatar(e).then((function(t){N.setAvatar(t.avatar),nt.close()})).catch((function(t){console.log("Error: ".concat(t))}))}));tt.addEventListener("click",(function(){var t=N.getAvatarInfo();nt.open(),et.value=t.avatar}));var rt=document.querySelector(".profile__add-button"),ot=document.querySelector("#title-input"),it=document.querySelector("#webaddress-input");rt.addEventListener("click",(function(){ot.value="",it.value="",ot.setAttribute("placeholder","Judul"),it.setAttribute("placeholder","URL Gambar"),Z.open()})),Promise.all([J.getUserData(),J.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,c=[],a=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;a=!1}else for(;!(a=(r=i.call(n)).done)&&(c.push(r.value),c.length!==e);a=!0);}catch(t){l=!0,o=t}finally{try{if(!a&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return c}}(e,n)||function(t,e){if(t){if("string"==typeof t)return M(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?M(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];U=o._id,N.setUserInfo({nameInput:o.name,jobInput:o.about}),N.setAvatar(o.avatar),G.renderItems(i)})).catch((function(t){console.log("Error: ".concat(t))})),F.setEventListeners(),Z.setEventListeners(),nt.setEventListeners(),W.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,